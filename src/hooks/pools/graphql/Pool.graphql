#import './../../balances/graphql/Balance.graphql'

enum PoolType {
  LBP
  XYK
}

enum TradeType {
  Buy
  Sell
}

type LBPAssetWeights {
  initial: Int!
  final: Int!
  current: Int!
}

type Fee {
  numerator: String!
  denominator: String!
}

# TODO: figure out which fields are populated at creation and at update
type LBPPool {
  id: String!
  assetInId: String!
  assetOutId: String!
  balances: [Balance!]
  fee: Fee!
  repayTarget: String
  repayTargetReached: Boolean
  feeCollectorBalance: String
  feeCollector: String
  assetAWeights: LBPAssetWeights!
  assetBWeights: LBPAssetWeights!
  startBlock: Int!
  endBlock: Int!
}

type XYKPool {
  id: String!
  assetInId: String!
  assetOutId: String!
  balances: [Balance!]
  totalLiquidity: String
  shareTokenId: String!
}

union Pool = XYKPool | LBPPool

extend type Query {
  pools: [Pool!]!
  # Just to make sure TradeType makes it through the codegen
  # otherwise it'd be ignored
  _tradeType: TradeType
}
